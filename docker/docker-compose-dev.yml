services:
   mysql:
      image: 'mysql:latest'
      container_name: mysql-container
      environment:
         - 'MYSQL_DATABASE=${MYSQL_SERVER_DATABASE}'
         - 'MYSQL_PASSWORD=${MYSQL_SERVER_PASSWORD}'
         - 'MYSQL_ROOT_PASSWORD=${MYSQL_SERVER_ROOT_PASSWORD}'
         - 'MYSQL_USER=${MYSQL_SERVER_USERNAME}'
      ports:
         - 43306:3306
      command:
         - '--character-set-server=utf8mb4'
         - '--collation-server=utf8mb4_unicode_ci'
      volumes:
         - foodier-finder-mysql-data:/var/lib/mysql
      networks:
         - foodie-finder-network

   redis:
      image: 'redis:latest'
      container_name: redis-container
      ports:
         - 46379:6379
      environment:
         - REDIS_PASSWORD=${REDIS_PASSWORD}
      command: ['redis-server', '--requirepass', '${REDIS_PASSWORD}']
      volumes:
         - foodier-finder-redis-data:/data
      networks:
         - foodie-finder-network

   nginx:
      build:
         context: ../
         dockerfile: ./docker/dockerfile.image.nginx
      container_name: nginx-container
      ports:
         - 48080:80
      command: ['nginx', '-g', 'daemon off;']
      volumes:
         - ../nginx/image_server/conf/nginx.conf:/etc/nginx/nginx.conf # nginx.conf 매핑
         - ../nginx/image_server/conf.d:/etc/nginx/conf.d # conf.d 디렉토리 매핑
         - ../images:/usr/share/nginx/html/images # 이미지 파일 매핑
      depends_on:
         - mysql
         - redis
      networks:
         - foodie-finder-network

networks:
   foodie-finder-network:
      driver: bridge

volumes:
   foodier-finder-mysql-data:
   foodier-finder-redis-data:
